version: '3'

volumes:
  srv:
  snap:

services:
  redis:
    image: redis
  postgres:
    image: postgres
  daphne:
    build:
      context: .
      dockerfile: Dockerfile.nimopidy
    expose:
      - "8000"
    depends_on:
      - redis
      - postgres
    command: daphne -b 0.0.0.0 -p 8000 nimopidy.asgi:channel_layer
    env_file:
      - .env
    volumes:
      - "./nimopidy:/app/nimopidy"
      - "./musicapp:/app/musicapp"
  worker:
    build:
      context: .
      dockerfile: Dockerfile.nimopidy
    depends_on:
      - redis
      - postgres
      - snapserver
      - mopidy
    command: bash -c "./manage.py collectstatic --noinput && ./manage.py migrate && ./manage.py runworker"
    volumes:
      - "srv:/srv/nimopidy"
      - "./nimopidy:/app/nimopidy"
      - "./musicapp:/app/musicapp"
      - "./build:/app/build"
    env_file:
      - .env
  nginx:
    image: nginx
    ports:
      - "8000:8000"
    volumes:
      - "srv:/srv/nimopidy"
      - "./conf/nginx:/etc/nginx/conf.d"
    links:
      - daphne
  mopidy:
    build:
      context: .
      dockerfile: Dockerfile.mopidy
    ports:
      - "6680:6680"
    depends_on:
      - snapserver
    volumes:
      - "./conf/mopidy_global:/etc/mopidy"
      - "./conf/mopidy_local:/root/.config/mopidy"
      - "snap:/snap"
  snapserver:
    build:
      context: .
      dockerfile: Dockerfile.snapserver
    ports:
      - "1705:1705"
      - "1704:1704"
    volumes:
      - "snap:/snap"
  playlists:
    build:
      context: .
      dockerfile: Dockerfile.nimopidy
    command: ./manage.py playlists
    depends_on:
      - redis
      - postgres
      - daphne
    volumes:
      - "srv:/srv/nimopidy"
      - "./nimopidy:/app/nimopidy"
      - "./musicapp:/app/musicapp"
    env_file:
      - .env
