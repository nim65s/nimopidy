version: '3'

volumes:
  srv:
  sql:
  snap:

services:
  redis:
    image: redis
    restart: unless-stopped
  postgres:
    image: postgres:10-alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - "sql:/var/lib/postgresql/data"
  memcached:
    image: memcached:alpine
    restart: unless-stopped
  daphne:
    build:
      context: .
      dockerfile: conf/Dockerfile.nimopidy
    restart: unless-stopped
    volumes:
      - "srv:/srv"
    env_file:
      - .env
    networks:
      - traefik
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: nimopidy, nimopidy.${DOMAIN_NAME:-local}"
      - "traefik.docker.network=traefik"
      - "traefik.port=8000"
  worker:
    build:
      context: .
      dockerfile: conf/Dockerfile.nimopidy
    restart: unless-stopped
    command: ./manage.py runworker mopidy snapcast
    volumes:
      - "srv:/srv"
    env_file:
      - .env
  nginx:
    image: nim65s/ndh:nginx
    restart: unless-stopped
    volumes:
      - "srv:/srv"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: nimopidy, nimopidy.${DOMAIN_NAME:-local}; PathPrefix: /static, /media"
  icecast:
    image: infiniteproject/icecast
    restart: unless-stopped
    ports:
      - 7001:8000
    env_file:
      - .env
  mopidy:
    build:
      context: .
      dockerfile: conf/Dockerfile.mopidy
    restart: unless-stopped
    ports:
      - "6600:6600"
      - "6680:6680"
    volumes:
      - "snap:/snap"
  snapserver:
    build:
      context: .
      dockerfile: conf/Dockerfile.snapserver_alpine
    restart: unless-stopped
    ports:
      - "1704:1704"
      - "1705:1705"
    volumes:
      - "snap:/snap"

networks:
  traefik:
    external: true
